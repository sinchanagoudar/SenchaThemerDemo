{
    /**
     * The name of the package.
     */
    "name": "Custom",
    "sencha": {
        /**
         * Alternate names for this package.
         *
         *    "alternateName": [],
         */
        /**
          * The namespace of this package.
          *
          * As a general rule, all classes that belong to this package should be under this namespace
          * if multiple namespaces are part of this package, set this to "".
          */
        "namespace": "Ext",
        /**
         * The package type.
         *
         * Sencha Cmd understands the following types of packages:
         *  - code : An arbitrary package of code for use by applications or other packages.
         *  - theme : A package to be used as an applicationâ€™s theme.
         *  - locale : A package containing localization strings or locale-specific code.
         *  - template : A package containing one or more templates.
         */
        "type": "theme",
        /**
         * The parent theme package (only for "theme" package type).
         *
         * Themes can also use extend to inherit Sass and resources from another theme package.
         *
         *    "extend": "parent-theme-package",
         */
        "extend": "theme-material",
        /**
         * The toolkit used by this theme (only for "theme" package type).
         *
         * Themes can specify the toolkit they apply to ("classic" or "modern").
         *
         *    "toolkit": "classic",
         */
        "toolkit": "classic",
        /**
          * The author of the package.
          *
          * Required only if you are distributing this package through a Sencha Cmd repository,
          * in which case it should match the name you assign to your local package repository.
          */
        "creator": "anonymous",
        /**
         * A summarized description of this package.
         */
        "summary": "Short summary",
        /**
         * A detailed description of this package.
         */
        "detailedDescription": "Long description of package",
        /**
         * The package version.
         *
         * Typically, changes to the package should come along with changes to the version.
         * This number should be in this format: d+(.d+)*
         */
        "version": "1.0.0",
        /**
         * The version that users can transparently update from without requiring code changes.
         *
         * In addition the version property, packages can also indicate the degree to which
         * they are backward compatible using the compatVersion property.
         */
        "compatVersion": "1.0.0",
        /**
         * Spec. version of this package.json file.
         * This is set automatically by Sencha Cmd when first generating this file
         */
        "format": "1",
        /**
         * Additional resources used during theme slicing operations
         */
        "slicer": {
            "js": [
                {
                    "path": "${package.dir}/sass/example/custom.js",
                    "isWidgetManifest": true
                }
            ]
        },
        /**
         * Controls the output directory.
         */
        "output": "${package.dir}/build",
        /**
         * Indicates whether this is a locally developed package or downloaded form a repository.
         * Defaults to true on newly generated packages, should not be changed.
         */
        "local": true,
        /**
         * The theme (package) this package will use (e.g., "ext-theme-neptune", etc.).
         * This is only needed if the built package will be used by a non-Cmd application.
         *
         *     "theme": "ext-theme-classic",
         */
        /**
         * Sass configuration properties.
         */
        "sass": {
            /**
             * The namespace to which this package's SASS corresponds. The default value of
             * "Ext" means that the files in ./sass/src (and ./sass/var) match classes in
             * the Ext" root namespace. In other words, "Ext.panel.Panel" maps to
             * ./sass/src/panel/Panel.scss.
             *
             * To style classes from any namespace, set this to blank. If this is blank,
             * then to style "Ext.panel.Panel" you would put SASS in
             * ./sass/src/Ext/panel/Panel.scss.
             */
            "namespace": "Ext",
            /**
             * Comma-separated list of files or folders containing extra Sass. These
             * files are automatically included in the Sass compilation. By default this
             * is just "etc/all.scss" to allow import directives to control the order
             * other files are included.
             *
             * All "etc" files are included at the top of the Sass compilation in their
             * dependency order:
             *
             *      +-------+---------+
             *      |       | base    |
             *      | theme +---------+
             *      |       | derived |
             *      +-------+---------+
             *      | packages        |  (in package dependency order)
             *      +-----------------+
             *      | application     |
             *      +-----------------+
             */
            "etc": [
                "${package.dir}/sass/etc/all.scss",
                "${package.dir}/sass/etc/sencha-themer-defaults.scss"
            ],
            /**
             * Comma-separated list of folders containing Sass variable definitions
             * files. These file can also define Sass mixins for use by components.
             *
             * All "var" files are included after "etc" files in the Sass compilation in
             * dependency order:
             *
             *      +-------+---------+
             *      |       | base    |
             *      | theme +---------+
             *      |       | derived |
             *      +-------+---------+
             *      | packages        |  (in package dependency order)
             *      +-----------------+
             *      | application     |
             *      +-----------------+
             *
             * The "sass/var/all.scss" file is always included at the start of the var
             * block before any files associated with JavaScript classes.
             */
            "var": [
                "${package.dir}/sass/var",
                "${package.dir}/sass/var/sencha-themer-defaults.scss",
                "${package.dir}/sass/var/themer-ui-variables.scss"
            ],
            /**
             * Comma-separated list of folders containing Sass rule files.
             *
             * All "src" files are included after "var" files in the Sass compilation in
             * dependency order (the same order as "etc"):
             *
             *      +-------+---------+
             *      |       | base    |
             *      | theme +---------+
             *      |       | derived |
             *      +-------+---------+
             *      | packages        |  (in package dependency order)
             *      +-----------------+
             *      | application     |
             *      +-----------------+
             */
            "src": [
                "${package.dir}/sass/src",
                "${package.dir}/sass/src/mystyle.scss",
                "${package.dir}/sass/src/sencha-themer-defaults.scss"
            ],
            "generated": {
                "var": "sass/save.scss",
                "src": "sass/save"
            }
        },
        /**
         * This is the comma-separated list of folders where classes reside. These
         * classes must be explicitly required to be included in the build.
         */
        "classpath": [
            "${package.dir}/src"
        ],
        /**
         * Comma-separated string with the paths of directories or files to search. Any classes
         * declared in these locations will be automatically required and included in the build.
         * If any file defines an Ext JS override (using Ext.define with an "override" property),
         * that override will in fact only be included in the build if the target class specified
         * in the "override" property is also included.
         */
        "overrides": [
            "${package.dir}/overrides"
        ],
        "example": {
            /**
             * One or more folders that contain example applications for this package.
             */
            "path": [
                "${package.dir}/examples"
            ]
        },
        /**
             * You can list apps specifically.
             *
             *      "apps": [
             *          "demo1",
             *          "demo2"
             *      ]
             *
             * By default, all subfolders in the path are considered example applications.
             */
        /**
         * The framework this package will use (i.e., "ext" or "touch").
         * This is only needed if the built package will be used by a non-Cmd application.
         *
         *     "framework": "ext",
         */
        "framework": "ext",
        /**
         * Packages can require other packages in the same way that applications can require
         * packages.
         *
         * Can be specified as an array of package names or configuration objects.
         *
         *      "requires": [
         *          "foo",
         *          "bar@1.1-2.0",
         *          {
         *              "name": "baz"
         *              "version": "1.5"
         *          }
         *      ]
         *
         * Can also be specified as an object:
         *
         *      "requires": {
         *          "foo": "2.2",
         *          "bar": {
         *              "minVersion": "1.1",
         *              "version": "2.0"
         *          }
         *      }
         */
        "requires": [],
        // WARNING! Sencha Themer relies on these settings, modifying them may break functionality in Themer.
        "themer": {
            "version": "1.4.4",
            "palette": [
                {
                    "variable": "base_color",
                    "displayName": "Base Color",
                    "order": 0,
                    "r": 15,
                    "g": 137,
                    "b": 72,
                    "a": 1,
                    "h": 0.41120218579234974,
                    "s": 0.8905109489051095,
                    "v": 0.5372549019607843,
                    "id": "178ed4a4-6496-499e-a8d4-1b4f1a62a5ee",
                    "transparent": false,
                    "sass": "",
                    "base": true,
                    "tooltip": "<b>Base Color</b><br/>#0F8948",
                    "rgba": "rgba(15, 137, 72, 1)",
                    "hex": "#0F8948"
                },
                {
                    "variable": "body_background_color",
                    "displayName": "Body Background Color",
                    "order": 1,
                    "r": 246,
                    "g": 246,
                    "b": 246,
                    "a": 1,
                    "h": 0,
                    "s": 0,
                    "v": 0.9647058823529412,
                    "id": "1645ccf2-11a1-45d5-a9cd-351168fce3ae",
                    "transparent": false,
                    "sass": "",
                    "base": true,
                    "tooltip": "<b>Body Background Color</b><br/>#F6F6F6",
                    "rgba": "rgba(246, 246, 246, 1)",
                    "hex": "#F6F6F6"
                },
                {
                    "variable": "color",
                    "displayName": "Default Font Color",
                    "order": 2,
                    "r": 17,
                    "g": 17,
                    "b": 17,
                    "a": 1,
                    "h": 0,
                    "s": 0,
                    "v": 0.06666666666666667,
                    "id": "70726f22-49cd-4a9d-9a3a-5d027e742c7a",
                    "transparent": false,
                    "sass": "",
                    "base": true,
                    "tooltip": "<b>Default Font Color</b><br/>#111111",
                    "rgba": "rgba(17, 17, 17, 1)",
                    "hex": "#111111"
                }
            ]
        }
    }
}